from dotenv import dotenv_values
from f1ai_client import f1ai_client
import pprint

# Load environment variables from .env file
config = dotenv_values(".env")
TOKEN = config.get("US_EAST_1_TOKEN")

def process():
    # Initialize F1AI client with token from the F1 portal
    client = f1ai_client.init(TOKEN, region="us-east-1", verbose=True)

    try:
        print(">> Sending promote_model_registration request ...")
        response_json = client.promote_model_registration(
            model_name="irisclassifier",
            model_version=1,
            model_source="databricks_uc"  # 'databricks_registry' | 'databricks_uc' | 'aws_model_registry'
        )
        pprint.pprint(response_json)
    except Exception as e:
        # If an error occurs, try to print details from the last HTTP response
        if hasattr(client, "last_response"):
            print("=== Dumping last HTTP response ===")
            print(f"Status : {client.last_response.status_code}")
            print(f"Headers: {client.last_response.headers}")
            print(f"Body   : {client.last_response.text}")
        raise  # Re-raise the exception after logging

if __name__ == "__main__":
    process()
